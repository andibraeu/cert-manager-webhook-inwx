image: golang:1.13-alpine

stages:
  - test
  - deploy

test:
  stage: test
  script:
    - apk add --no-cache git g++ gettext curl
    - scripts/fetch-test-binaries.sh
    - envsubst < testdata/config.json.tpl > testdata/config.json
    - go mod download
    - go test -cover .
  coverage: '/coverage:\s(\d+(?:\.\d+)?%)/'
  interruptible: true

lint-go:
  stage: test
  script:
    - apk add --no-cache git
    - go get -u golang.org/x/lint/golint
    - golint -set_exit_status
  interruptible: true

lint-helm:
  stage: test
  image:
    name: alpine/helm:3.0.2
    entrypoint: [""]
  script:
    - helm lint deploy/cert-manager-webhook-inwx
  interruptible: true

docker:
  stage: deploy
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
  interruptible: true
