image: golang:1.13-alpine

stages:
  - test
  - deploy

test:
  stage: test
  script:
    - scripts/fetch-test-binaries.sh
    - apk add --no-cache git g++ gettext
    - envsubst < testdata/config.json.tpl > testdata/config.json
    - go mod download
    - go test -cover .
  coverage: '/^coverage:\s(\d+(?:\.\d+)?%)/'

lint-go:
  stage: test
  script:
    - apk add --no-cache git
    - go get -u golang.org/x/lint/golint
    - go/bin/golint -set_exit_status

lint-helm:
  stage: test
  image: alpine/helm:3.0.2
  script:
    - helm lint deploy/cert-manager-webhook-inwx

docker:
  stage: deploy
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
